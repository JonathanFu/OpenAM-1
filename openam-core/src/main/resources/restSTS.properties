am_deployment_url=The url corresponding to the OpenAM deployment
issuer_name=The name of the issuer.\
issuer_name.help=This name will appear in some issued tokens - e.g. in  the saml:Issuer of issued SAML2 assertions.
deployment_realm=The realm in which the REST STS instance will be deployed.
deployment_url_element=The final element in the url defining the REST STS endpoint
deployment_url_element.help=For example, the restSTS1 element in http://host.com:80/openam/realm1/realm2/restSTS1
deployment_auth_target_mappings=For each validated token type (other than OpenAM), the REST authN elements which will validate token instances
deployment_auth_target_mappings.help=Entry format: TokenType;authIndexType;authIndexValue;context_key=context_value,context_key1=context_value1. \
  The context_key=context_value entries are optional.
deployment_auth_target_mappings.help.txt=Some authN modules require additional state: for example, the OpenIdConnect \
  authN module expects the IdToken in a specific header. The final key=value entry following the final ';' stipulates \
  this context. The key must be oidc_id_token_auth_target_header_key, and the value corresponding to the header value \
  configured for the OpenIDConnect authN module.
supported_token_transforms=Listing of support token transformations
supported_token_transforms.help=Entry format:input_token_type;output_token_type;{true|false}, where true|false indicates \
  whether the interim OpenAM session is invalidated following token issuance.
supported_token_transforms.help.txt=Example: for the transform USERNAME:SAML2, it is likely that the OpenAM session \
  generated as part of validating the USERNAME token should be invalidated, and thus the config entry would be \
  USERNAME;SAML2;true. If this value were false, each USERNAME->SAML2 transformation will result in a 'left-over' OpenAM session. \
  Note that currently, any tranformation which starts with an OPENAM session, e.g. OPENAM;SAML2,  will not invalidate \
  this OPENAM session, as it was not created as part of the token transformation.
keystore_filename=The full path to the keystore, either on the classpath, or on the filesystem.
keystore_password=The password to the keystore specified above
signature_key_alias=The alias identifying the private key entry used to sign issued tokens
signature_key_password=The password corresponding to the signature key alias, if any
encryption_key_alias=
encryption_key_password=